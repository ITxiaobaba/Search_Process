package participle;import org.ansj.domain.Result;import org.ansj.domain.Term;import org.ansj.recognition.impl.StopRecognition;import org.ansj.splitWord.analysis.ToAnalysis;import java.io.*;import java.util.*;public class Participle {    public static void writeCharBuffer(String contentString, String fileName) throws Exception {        FileWriter fw=new FileWriter(fileName);        BufferedWriter bw=new BufferedWriter(fw,40);        bw.newLine();        bw.write(contentString);        bw.close();        fw.close();        System.out.println("写入成功");    }    public static void getAnalysis(){        String path="F://CrawlerSourceTxtC";        File file=new File(path);        File[] fs=file.listFiles();        List<String> stopword=new ArrayList<>();        String fpath="F://CrawlerStopWords/stopwords_cn.txt";        try {            BufferedReader b=new BufferedReader(new FileReader(fpath));            String s=null;            while((s=b.readLine())!=null){                stopword.add(s);            }            b.close();            for(String stop:stopword){                System.out.println(stop);            }        } catch (FileNotFoundException e) {            e.printStackTrace();        } catch (IOException e) {            e.printStackTrace();        }        int num=0;        //遍历目录下的所有Txt        for(File f:fs){            if(!f.isDirectory()){                StringBuilder sb = new StringBuilder();                BufferedReader br=null;                try {                    br=new BufferedReader(new FileReader(f));                    String str=null;                    while((str=br.readLine())!=null){                        sb.append(str);                    }                    //ansj分词器精准分词                    StopRecognition s=new StopRecognition();                    s.insertStopWords(stopword);                    Result result= ToAnalysis.parse(sb.toString()).recognition(s);                    List<Term> terms=result.getTerms();                    System.out.println(f);                   // System.out.println(terms.size());                    StringBuilder sWord=new StringBuilder();                    for(int i=0;i<terms.size();i++){                        String word=terms.get(i).getName()+" ";                        String natureStr=terms.get(i).getNatureStr();                        sWord.append(word);                        System.out.print(word);                    }                    String fileName="F://CrawlerAnalysisTxtC/News_"+num+"_C.txt";                    num+=1;                    File fileout=new File(fileName);                    if(!fileout.exists()){                        fileout.createNewFile();                    }                    try{                        writeCharBuffer(sWord.toString(),fileName);                    }catch(Exception e){                        e.printStackTrace();                    }                   // System.out.println(sb.toString());                } catch (IOException e) {                    e.printStackTrace();                }finally{                    try {                        br.close();                    } catch (IOException e) {                        e.printStackTrace();                    }                }            }        }    }    public static void getAnalysisE(){        String path="F://CrawlerSourceTxtE";        File file=new File(path);        File[] fs=file.listFiles();        List<String> stopword=new ArrayList<>();        String fpath="F://CrawlerStopWords/stopwords_en.txt";        try {            BufferedReader b=new BufferedReader(new FileReader(fpath));            String s=null;            while((s=b.readLine())!=null){                stopword.add(s);            }            b.close();            for(String stop:stopword){                System.out.println(stop);            }        } catch (FileNotFoundException e) {            e.printStackTrace();        } catch (IOException e) {            e.printStackTrace();        }        int num=0;        //遍历目录下的所有Txt        for(File f:fs){            if(!f.isDirectory()){                StringBuilder sb = new StringBuilder();                BufferedReader br=null;                try {                    br=new BufferedReader(new FileReader(f));                    String str=null;                    while((str=br.readLine())!=null){                        sb.append(str);                    }                    //ansj分词器精准分词                    StopRecognition s=new StopRecognition();                    s.insertStopWords(stopword);                    Result result= ToAnalysis.parse(sb.toString()).recognition(s);                    List<Term> terms=result.getTerms();                    System.out.println(f);                    // System.out.println(terms.size());                    StringBuilder sWord=new StringBuilder();                    for(int i=0;i<terms.size();i++){                        String word=terms.get(i).getName()+" ";                        String natureStr=terms.get(i).getNatureStr();                        sWord.append(word);                        System.out.print(word);                    }                    String fileName="F://CrawlerAnalysisTxtE/News_"+num+"_E.txt";                    num+=1;                    File fileout=new File(fileName);                    if(!fileout.exists()){                        fileout.createNewFile();                    }                    try{                        writeCharBuffer(sWord.toString(),fileName);                    }catch(Exception e){                        e.printStackTrace();                    }                    // System.out.println(sb.toString());                } catch (IOException e) {                    e.printStackTrace();                }finally{                    try {                        br.close();                    } catch (IOException e) {                        e.printStackTrace();                    }                }            }        }    }    public static void main(String[] args){        getAnalysis();        getAnalysisE();    }}